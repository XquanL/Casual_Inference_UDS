sum((c(-2, 1, -10, 3) - c(1, -1, -1, 8))^2)
sum(c(-4, -3, -10, 1) * c(2, 7, -2, 9))
sum(c(-4, -3, -10, 1) * c(4, 3, 10, 1))
sum(c(-4, -3, -10, 1) * c(10, 1, -1, 33))
sum(c(-4, -3, -10, 1) * c(-12, -9, -30, 3))
-3 - 7 * 15
-1 + 3 * 19
x = matrix(c(-1, 8, -2, 3), 2, 2)
y = matrix(c(1, -8, -2, -1), 2, 2)
x %*% y %*% x %*% y
11 - 18 + 11 - 11
21 + 12 + 33
x = matrix(c(3, -2, 1, 19, -5, 8, 81, -22, 34), 3, 3)
inv(x)
solve(x)
1 + 96 * 8  - 34 * 23
solve(matrix(c(4, -2, -2,  5), 2, 2))
x = matrix(c(3, 2, -2, -16, -9, 11, -42, -24, 29), 3, 3)
x %*% c(-15, 63, 25)
x %*% c(1, -1, -4)
x %*% c(27, 15, -19)
x %*% c(-15, 63, -25)
(-5 * -17) + (-3 * -14) + (-5 * -23) +2
-17 - 14 - 23 + 1
244 - 53 * 6
25 + 9 + 25 + 4
244/7
244/9
4 * 63 - 121
244 * 11 - 53 * 63
655 / 131
244 - 55
189 / 63
A = matrix(c(0, 2, 4, 6, 8, 10, 12, 1, 1, 1, 1, 1, 1, 1), ncol = 2)
A
b = c(22, 25, 26, 27, 28, 31, 32)
t(A) %*% A
t(A) %*% b
solve(t(A) %*% A) %*% t(A) %*% b
0.7857143 * 20 + 22.5714286
Qt = matrix(c(1, 1, -1, -1, -1, -1, 1, -1, 1, -1, 1, 1), ncol = 4)
Qt %*% c(2, -12, 28, -14)
Qt = Qt/2
Qt %*% c(2, -12, 28, -14)
9 + 36 + 4
t(matrix(c(3/7, 6/7, 2/7, -6/7, 2/7, 3/7, -2/7, 3/7, -6/7), 3, 3)) %*% matrix(c(3, 6, 2, -9, -4, 1, 7, 7, 7), 3, 3)
matrix(c(3/7, 6/7, 2/7, -6/7, 2/7, 3/7, -2/7, 3/7, -6/7), 3, 3) %*% matrix(c(7, 0, 0, -7, 7, 0, 11, -1, -6), 3, 3)
matrix(c(3/7, 6/7, 2/7, -6/7, 2/7, 3/7, -2/7, 3/7, -6/7), 3, 3) %*% matrix(c(7, 0, 0, -7, 7, 0, 11, -1, -5), 3, 3)
t(matrix(c(29/45, -4/9, 28/45, 28/45, 7/9, -4/5, 4/9, -4/9, -7/9), 3, 3)) %*% c(-90, 9, 45)
49 + 16 + 16
-15 * 9 + 6 * 21 + 22
A = matrix(c(9, -1, -3, 4, -6, 1, 2, -3, 22, -4, -7, 11), 4, 3)
A %*% c(-15, -21, 1)
sum((A %*% c(-15, -21, 1) - c(13, 0, 6, 24))^2)
A = matrix(c(-4, 3, 0, 4, 5, 1, 1, 1, 1, 1), 5, 2)
b = c(-3, 15, 14, 11, 19)
solve(t(A) %*% A) %*% t(A) %*% b
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
A %*% c(0, 1, -2)
source("~/.active-rstudio-document", echo=TRUE)
224/8
mean(c(16, 38, 39, 18, 17, 64))
A <- matrix(c(16, 38, 39, 18, 17, 64, 130, 120, 126, 113, 131, 124, 12, 2, 5, 85, 65, 59), nrow = 6, ncol = 3)
center <- matrix(c(rep(32, 6), rep(124, 6), rep(38, 6)), 6, 3)
Ac <- A - center
Ac
mean(Ac)
t(Ac) %*% Ac
v = c(-1, 1, 2)
v = c(-1, 1, -2)
w = c(1, 2, 2)
proj = sum(v*w) / sum(w * w) * w
sum((v - proj)^2)
v = c(0,2)
w = c(1,1)
sum((v - sum(v*w) / sum(w * w) * w)^2)
v = c(-1,-2)
sum((v - sum(v*w) / sum(w * w) * w)^2)
v = c(1,0)
sum((v - sum(v*w) / sum(w * w) * w)^2)
#Set working directory
setwd("~/GoogleDrive/Shared drives/Voting Rights Project /Litigation/Active Litigation /Reyes et al. v. Chilton et al. (Signature Matching in WA)/WA Data/Election Data/ballot_reports_2021")
#Set working directory
setwd("GoogleDrive/Shared drives/Voting Rights Project /Litigation/Active Litigation /Reyes et al. v. Chilton et al. (Signature Matching in WA)/WA Data/Election Data/ballot_reports_2021")
#Set working directory
setwd("/GoogleDrive/Shared drives/Voting Rights Project /Litigation/Active Litigation /Reyes et al. v. Chilton et al. (Signature Matching in WA)/WA Data/Election Data/ballot_reports_2021")
#Set working directory
setwd("/Google Drive/Shared drives/Voting Rights Project /Litigation/Active Litigation /Reyes et al. v. Chilton et al. (Signature Matching in WA)/WA Data/Election Data/ballot_reports_2021")
#Set working directory
setwd("~/Google Drive/Shared drives/Voting Rights Project /Litigation/Active Litigation /Reyes et al. v. Chilton et al. (Signature Matching in WA)/WA Data/Election Data/ballot_reports_2021")
list.files()
#Read in Election
election <- read_csv('2021_feb_special.csv')
#### LIBRARIES AND DATA ####
library(tidyverse)
library(eeptools)
#Read in Election
election <- read_csv('2021_feb_special.csv')
#Create variables for - mail ballots,
election <- election %>%
mutate(
accepted = ifelse(str_detect(`Ballot Status`, 'Accepted'), 1, 0), #create a new column of ballot acceptance status with true false values
rejected = case_when(accepted == 1 ~ 0, accepted == 0 ~ 1), #create a new column of ballot rejection status with true false values
mail_ballot = case_when(`Return Method` == "Drop Box" | `Return Method` == "Mail" | `Return Method` == "Non-Standard Dropbox" | `Return Method` == "Non-Standard Mail" ~ 1), #create a new column of mail ballots indicators
rejected_mail_ballot = mail_ballot*rejected, #a new column of true false values indicating when a mailed-in ballot was rejected
voted = case_when(!is.na(`Return Method`) ~ 1), #cases when the voter did not vote
signature_mismatch_rejection = case_when(`Challenge Reason` == "Signature Does Not Match" ~ 1), #case when ballot was challenged because signature did not match
mismatch_rejection = rejected_mail_ballot * signature_mismatch_rejection #case when ballot was rejected because signature did not match
)
#Change NAs to 0s for new columns
election$mail_ballot[is.na(election$mail_ballot)] <- 0
election$rejected_mail_ballot[is.na(election$rejected_mail_ballot)] <- 0
election$voted[is.na(election$voted)] <- 0
election$signature_mismatch_rejection[is.na(election$signature_mismatch_rejection)] <- 0
election$mismatch_rejection[is.na(election$mismatch_rejection)] <- 0
#Change blank cells to NA
election[election==""] <- NA
columns(election)
col(elections)
column(elections)
column(election)
col(election)
colnames(election)
`
#Rename Last Name column for ease
election$last_name <- election$`Last Name`
table(elections$County)
table(election$County)
#Filter out counties of interest
election <- election %>%
filter(County %in% c('Benton','Chelan','Yakima'))
#Change last name column to uppercase
election$last_name <- toupper(election$last_name)
#Change 'DE' Prefix to part of last name
election$last_name <- ifelse(
startsWith(x = election$last_name, prefix = "DE")==TRUE,
sub(" ", "", election$last_name), election$last_name)
#Remove unreadable characters from last name column
election$last_name <- gsub("[^[:alnum:][:space:]]","",election$last_name)
#Separate last names by any characters
election <- separate(data = election, col = last_name, into = c("surname1", "surname2", "surname3", "surname4", "surname5"), sep = "-|\\s")
#Upload Spanish surname CSV
latino_surname <- read_csv('spanish_surname.csv')
#Join Multiple Surname DF and Surnames Individually
election <- left_join(election, latino_surname, by = c("surname1" = "surname"))
election <- left_join(election, latino_surname, by = c("surname2" = "surname"))
election <- left_join(election, latino_surname, by = c("surname3" = "surname"))
election <- left_join(election, latino_surname, by = c("surname4" = "surname"))
election <- left_join(election, latino_surname, by = c("surname5" = "surname"))
View(election)
election$spanish_flag[is.na(election$spanish_flag)] <- 0 #change NAs to 0s
election$spanish_flag.x[is.na(election$spanish_flag.x)] <- 0 #change NAs to 0s
election$spanish_flag.y[is.na(election$spanish_flag.y)] <- 0 #change NAs to 0s
election$spanish_flag.x.x[is.na(election$spanish_flag.x.x)] <- 0 #change NAs to 0s
election$spanish_flag.y.y[is.na(election$spanish_flag.y.y)] <- 0 #change NAs to 0s
election <- election %>%
mutate(spanish_surname_flag = case_when(
spanish_flag.x == 1 | spanish_flag.y == 1 | spanish_flag.x.x == 1 |
spanish_flag.y.y == 1 | spanish_flag == 1 ~ 1))
election$spanish_surname_flag[is.na(election$spanish_surname_flag)] <- 0 #change NAs to 0s
?drop
election = election %>% select(-c(spanish_flag, spanish_flag.x, spanish_flag.y, spanish_flag.x.x, spanish_flag.y.y))
sum(election$spanish_surname_flag)
nrow(Election)
nrow(election)
table(election$County)
#Upload Spanish First name CSV
first_name <- read_csv('spanish_firstname.csv')
#Change list first names to uppercase
first_name$fname <- toupper(first_name$fname)
#Rename First Name Column for ease
election <- election %>%
mutate(first_name = `First Name`)
#Remove Unreadable characters from first name
election$first_name <- gsub("[^[:alnum:][:space:]]","",election$first_name)
#Change First names to uppercase
election$first_name <- toupper(election$first_name)
#Separate first names by any characters
name_analysis <- separate(data = name_analysis, col = first_name, into = c("first1", "first2", "first3", "first4", "first5"), sep = "-|\\s")
#Separate first names by any characters
election <- separate(data = election, col = first_name, into = c("first1", "first2", "first3", "first4", "first5"), sep = "-|\\s")
#Join Multiple Surname DF and Surnames Individually
election <- left_join(election, first_name, by = c("first1" = "fname"))
election <- left_join(election, first_name, by = c("first2" = "fname"))
election <- left_join(election, first_name, by = c("first3" = "fname"))
election <- left_join(election, first_name, by = c("first4" = "fname"))
election <- left_join(election, first_name, by = c("first5" = "fname"))
election$span_first[is.na(election$span_first)] <- 0 #change NAs to 0s
election$span_first.x[is.na(election$span_first.x)] <- 0 #change NAs to 0s
election$span_first.y[is.na(election$span_first.y)] <- 0 #change NAs to 0s
election$span_first.x.x[is.na(election$span_first.x.x)] <- 0 #change NAs to 0s
election$span_first.y.y[is.na(election$span_first.y.y)] <- 0 #change NAs to 0s
#Create FINAL Spanish first name flag
election <- election %>%
mutate(fname_flag = case_when(
span_first == 1 | span_first.x == 1 | span_first.y == 1 | span_first.x.x == 1 | span_first.y.y == 1 ~ 1))
election$fname_flag[is.na(election$fname_flag)] <- 0 #change NAs to 0s
#Remove the matching columns
election = election %>% select(-c(span_first, span_first.x, span_first.y, span_first.x.x, span_first.y.y))
#Create variables for those with only surname flag, only fname flag, and both flag
election <- election %>%
mutate(
only_spanish_surname = case_when(
spanish_surname_flag == 1 & fname_flag == 0 ~ 1),
only_spanish_fname = case_when(
fname_flag == 1 & spanish_surname_flag == 0 ~ 1),
both_name_flag = case_when(
spanish_surname_flag == 1 & fname_flag == 1 ~ 1)  )
election$both_name_flag[is.na(election$both_name_flag)] <- 0 #change NAs to 0s
election$only_spanish_surname[is.na(election$only_spanish_surname)] <- 0 #change NAs to 0s
election$only_spanish_fname[is.na(election$only_spanish_fname)] <- 0 #change NAs to 0s
#Create variable for First name and surname matched individuals
election <- election %>%
mutate(
surname_latino_voted = only_spanish_surname*voted,
fname_latino_voted = only_spanish_fname * voted,
both_name_voted = both_name_flag * voted,
surname_latino_rejected_mail = only_spanish_surname * mismatch_rejection,
fname_latino_rejected_mail = only_spanish_fname * mismatch_rejection,
both_latino_rejected_mail = both_name_flag * mismatch_rejection)
#Calculate county totals
election_surname_analysis <- election %>%
group_by(County) %>%
summarise(
total_voted = sum(voted),
surname_latino_voted = sum(surname_latino_voted),
fname_latino_voted = sum(fname_latino_voted),
both_name_voted = sum(both_name_voted),
total_rejected_mail = sum(mismatch_rejection),
surname_latino_rejected_mail = sum(surname_latino_rejected_mail),
fname_latino_rejected_mail = sum(fname_latino_rejected_mail),
both_latino_rejected_mail = sum(both_latino_rejected_mail))
election_surname_analysis
print(election_surname_analysis)
View(election_surname_analysis)
library(ggplot2)
colnames(election_surname_analysis)
election_surname_analysis <- election_surname_analysis %>%
mutate(latino_surname_rejection_rate = surname_latino_rejected_mail/surname_latino_voted,
latino_fname_rejection_rate = fname_latino_rejected_mail/fname_latino_voted,
latino_both_rejection_rate = both_latino_rejected_mail/both_name_voted,
general_rejection_rate = total_rejected_mail/total_voted)
election_analysis_subset <- election_surname_analysis %>%
select(latino_surname_rejection_rate, latino_fname_rejection_rate, latino_both_rejection_rate, general_rejection_rate)
election_analysis_subset_tall <- election_analysis_subset %>% pivot_longer(cols = 2:4, names_to = "Type", values_to = "Rate")
election_analysis_subset_tall
election_analysis_subset <- election_surname_analysis %>%
select(latino_surname_rejection_rate, latino_fname_rejection_rate, latino_both_rejection_rate, general_rejection_rate)
election_analysis_subset
election_analysis_subset_tall <- election_analysis_subset %>% pivot_longer(cols = 1:4, names_to = "Type", values_to = "Rate")
election_analysis_subset_tall
election_analysis_subset <- election_surname_analysis %>%
select(County, latino_surname_rejection_rate, latino_fname_rejection_rate, latino_both_rejection_rate, general_rejection_rate)
election_analysis_subset_tall <- election_analysis_subset %>% pivot_longer(cols = 2:5, names_to = "Type", values_to = "Rate")
election_analysis_subset_tall
feb_special_2021_geom <- ggplot(data = election_analysis_subset_tall, aes(x = County, y = Rate, fill = Type))
plot <- feb_special_2021_geom + geom_bar(stat = "identity", position = 'dodge')
plot
feb_special_2021_overall <- feb_special_2021_geom + geom_bar(stat = "identity", position = 'dodge')
#****NOTE YOU'RE CREATING A SEPARATE DATAFRAME FOR THIS****
#Filter out voters who don't have a DOB or received data listed
dob_analysis <- election %>%
filter(!is.na(DOB)) %>%
filter(!is.na(Received_Date))
colnames(election)
2021_gen <- read_csv('2021_nov_general.csv')
gen_2021 <- read_csv('2021_nov_general.csv')
colnames(gen_2021)
palatte_manual <- c("#FFCC00", "#330066" ,"#6633CC", "#CC00FF")
palette_manual <- c("#FFCC00", "#330066" ,"#6633CC", "#CC00FF")
feb_special_2021_overall <- feb_special_2021_geom + geom_bar(stat = "identity", position = 'dodge') + scale_fill_manual(values=palette_manual)
feb_special_2021_overall
feb_special_2021_geom <- ggplot(data = election_analysis_subset_tall, aes(x = County, y = Rate * 100, fill = Type))
palette_manual <- c("#FFCC00", "#330066" ,"#6633CC", "#9966FF")
feb_special_2021_overall <- feb_special_2021_geom +
geom_bar(stat = "identity", position = 'dodge') +
scale_fill_manual(values=palette_manual) +
ylab("Rate of Rejection (%)") +
ggtitle("2021 February Special Election")
feb_special_2021_overall
path = "~/Google Drive/Shared drives/Voting Rights Project /Litigation/Active Litigation /Reyes et al. v. Chilton et al. (Signature Matching in WA)/WA Data/Election Data/ballot_reports_2021"
ggsave(feb_special_2021_overall, path = path, height = 400, width = 700)
ggsave(feb_special_2021_overall, "feb_special_2021.png", height = 400, width = 700)
ggsave(plot = feb_special_2021_overall, filename = "feb_special_2021.png", height = 400, width = 700)
ggsave(plot = feb_special_2021_overall, filename = "feb_special_2021.png", height = 4, width = 7)
-2 + (-9 * 7)
-23 + (16 * 7)
89/13
89/3
89/17
89/11
89/19
89/23
6*23
A <- matrix(c(-35, -29, 99, -203, 2, 12, -6, -8, -12, 0, 34, -87, 0, 4, 0, 7), 4, 4)
v1 <- c(0, 1, -6, -8)
v2 <- c(-1, 1, 0, 1)
v3 <- c(1, -1, 1, 3)
v4 <- c(4, 0, -11, 29)
v5 <- c(1, 1, -3, 5)
A %*% v1 / v1
A %*% v2 / v2
A %*% v3 / v3
A %*% v4 / v4
A %*% v5 / v5
A
A <- matrix(c(-35, -29, 99, -203, 2, 12, -6, -8, -12, 0, 34, -87, 0, 4, 0, -7), 4, 4)
A %*% v1 / v1
A %*% v2 / v2
A %*% v3 / v3
A %*% v4 / v4
A %*% v5 / v5
A %*% v4
A <- matrix(c(-57, 12, -12, -32, 3, -8, 208, -48, 43), 3, 3)
source("~/.active-rstudio-document", echo=TRUE)
v3 <- c(4, -1, 1)
A %*% v3
a <- c(-4, -2, 0, 2, 4)
a
b <- -4:4
b[c(-2, -4, -6, -8)]
a[-1]
c <- seq(-4, 4, by=2)
c
Medicare_Age <- rep(1, 5)
Medicare_Age
Medicare_Age[c(T, T, NA, F, T)] <- 0
Medicare_Age
NA | F
NA | T
?smartbind
df1 <- data.frame(A = 1:10, B = LETTERS[1:10], C = rnorm(10))
df2 <- data.frame(A = 11:20, D = rnorm(10), E = letters[1:10])
smartbind(df1, df2, fill = 0)
library(gtools)
smartbind(df1, df2, fill = 0)
df1
df2
?merge
download.file("https://www.dropbox.com/s/l3gekntmfstmcio/acu_rct.RData?dl=1",
destfile="acu_rct.RData", quiet=TRUE, mode="wb", cacheOK=FALSE)
load("acu_rct.Rdata")
table(acu_rct$practice_id)
length(table(acu_rct$practice_id))
length(unique(acu_rct$practice_id))
unique(acu_rct$practice_id)
unique(acu_rct$sex)
mean(acu_rct$sex == 1)
sum(acu_rct$sex == 1)
sum(acu_rct$sex == 0)
acu_rct[[c('pk1', 'pk2', 'pk3')]]
acu_rct[c('pk1', 'pk2', 'pk3')]
acu_rct[["pk1"]]
acu_rct[["pk1", "pk2"]]
acu_rct[[c("pk1", "pk2")]]
acu_rct[["pk1":"pk3"]]
acu_rct[,"pk1":"pk3"]
colnames(acu_rct)
acu_rct[,"pk1":"pk5"]
acu_rct[,10:12]
rowSumes(is.na(acu_rct[, 10:12]))
rowSums(is.na(acu_rct[, 10:12]))
sum(rowSums(is.na(acu_rct[, 10:12])) > 0)
nrow(acu_rct)
library(tidyverse)
library(lubridate)
acu_rct
acu_rct %>%
select(date_randomized, chronicity) %>%
mutate(date = as_datetime(date_randomized))
?mutate
acu_rct %>%
select(date_randomized, chronicity) %>%
mutate("date" = as_datetime(date_randomized))
acu_rct %>%
select(date_randomized, chronicity)
library(stringr)
acu_rct %>%
select(date_randomized, chronicity) %>%
mutate("year" = str_sub(date_randomized, start = -1, end = -4))
acu_rct %>%
select(date_randomized, chronicity) %>%
mutate("year" = str_sub(date_randomized, start = -1, end = -4)) %>%
head()
acu_rct %>%
select(date_randomized, chronicity) %>%
mutate("year" = str_sub(date_randomized, start = -1)) %>%
head()
?str_sub
acu_rct %>%
select(date_randomized, chronicity) %>%
mutate("year" = str_sub(date_randomized, start = -4, end = -1)) %>%
head()
acu_rct %>%
mutate("year" = str_sub(date_randomized, start = -4, end = -1)) %>%
select(date_randomized, chronicity) %>%
groupby(year) %>%
summarise(median = median(chronicity))
acu_rct %>%
mutate("year" = str_sub(date_randomized, start = -4, end = -1)) %>%
select(date_randomized, chronicity) %>%
group_by(year) %>%
summarise(median = median(chronicity))
acu_rct %>%
mutate(year = str_sub(date_randomized, start = -4, end = -1)) %>%
select(date_randomized, chronicity) %>%
group_by(year) %>%
summarise(median = median(chronicity))
acu_rct %>%
mutate(year = str_sub(date_randomized, start = -4, end = -1)) %>%
select(year, chronicity) %>%
group_by(year) %>%
summarise(median = median(chronicity))
NA|T
NA > 80
acu_rct %>%
select(group, sex) %>%
group_by(group) %>%
summarise(female_perc = mean(sex == 1))
-36 + 1
-36 + 1 + 3
3^5
2^6
3^7
2^8
584.88 * 0/8
584.88 * 0.8
library(kableExtra)
library(tidyverse)
library(caret)
library(GGally)
library(broom)
library(purrr)
library(plyr)
library(boot)
library(table1)
library(pander)
library(glmnet)
library(gridExtra)
# Load in the dataset
smoking <- read_csv("smoking.csv")
#Remove the 99 values from the weight variable
smoking <- smoking[-(smoking$bwt.oz==99),]
# Turning the smoke indicator variable into a factor
smoking$smoke <-
factor(smoking$smoke,
levels=c(0,1),
labels=c("Never smoked",
"Smoke"))
# Turning the Income indicator variable into a factor
smoking$inc <-
factor(smoking$inc,
levels=c(0:9),
labels=c("Under $2500", "$2500-$4999","$5000-$7499",
"$7500-$9999","$10000-$12499","$12500-$14999",
"$15000-$17499","$17500-$19999","$20000-$22499",
"$22500+"))
# Turning the Med indicator variable into a factor
smoking$med <-
factor(smoking$med,
levels=c(0:7),
labels=c("<8th grade", "8th-12th grade","High School",
"High School + Trade School","Some College","College Graduate",
"Trade School","Trade School"))
# Re-encode the race numeric variable into characters
smoking$mrace <-
factor(smoking$mrace,
levels=c(0:9),
labels=c("white", "white", "white", "white", "white", "white",
"Mexican", "Black", "Asian", "Mixed"))
# Making a table-1
label(smoking$smoke) <- "Smoking Status"
label(smoking$gestation)  <- "Gestation Age"
label(smoking$bwt.oz) <- "Weight"
label(smoking$parity) <- "Previous Pregnancies"
label(smoking$mrace) <- "Mother's Race"
label(smoking$mage) <- "Mother's Age"
label(smoking$mht) <- "Mother's Height"
label(smoking$mpregwt) <- "Mother's Pre-Pragnancy Weight"
label(smoking$inc) <- "Family Income"
label(smoking$med) <- "Mother's Education"
units(smoking$bwt.oz) <- "oz."
units(smoking$mpregwt) <- "lb."
units(smoking$mage) <- "year"
units(smoking$mht) <- "inches"
table1(~ . - smoke - id - date | smoke, data = smoking, overall = "Total")
(1.5 + 5.5 + 3.5)/3
3.5 * 1500
5250 - 2250
0.35 / 0.001
1500/350
350/1500
1 - 0.23333
3.5 * 1500 - 2250
0.001 * 200
clear
x <- c(2, 3, 10, -1, -1)
mean(x)
var(x)
x - (13/5)
sum(x^2)/4
sum((x- 13/5)^2)/4
(x- 13/5)^2
ls
getwd()
setwd("Desktop/Duke/IDS701/uds-2023-team-1/10_data/")
getwd()
data <- read.csv("national20212022_PUBLIC_instchars.csv")
head(data)
View(data)
getwd()
